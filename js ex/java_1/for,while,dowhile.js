for(let i= 0; i < 10; i++) { //i=0으로 설정, i가 10보다 작을 때 , i는 1을 더한다.
console.log(i+1); //처음 i가 0이라서 i가 1부터 출력을 하고싶으면 +1로 붙이면 됨
}
//for반복문 let i=0 초기값 , i <10 조건, i++코드 실행 후 작업 

let e=0;

while(e<10){ // e값이 10보다 작을 때 참이면 밑으로 내려가서
    console.log(e); // e값을 출력
    e++; //e값을 1증가 시킨다. e++을 안한다면 e가 계속 0에 머물러있다
}
//while 반복문 처음 e 값이 0이므로 무한루프에 빠질수도 있어 e값이 증가하는 e++을 작성해야한다.

let s=0; 

do{
    s++; //s값을 1증가 시키고
    console.log(s); // s값을 먼저 출력한다 그럼 1이 출력이 되고 그 다음 while문으로 간다.
} while(s<10) //s가 10보다 작을 때 
//do whil 은 while이랑 비슷하지만 while이랑 다르게 코드를 실행하고 반복문으로 가기 때문에 
//처음부터 s값이 1이 증가하고 시작한다.

//break  : 멈추고 빠져나옴
//continue : 멈추고 다음 반복문으로 진행

/*while(true){
    let answer = confirm ("계속진행?");
    if(!answer){
        break;
    }
}
참고로 while(true)는 무한대 값이 나오므로 조심 */
//continue
//짝수만 사용하기
for (let a=0; a<10;a++){ // a가 0이고, 10보다 작을 때, 1씩 증가한다.
    if(a%2){ // 만약 a의 값이 %2해서 나머지 값이 0 일때 콘솔로 출력이 된다
        continue; //나머지 값이 생긴다면 continue함수 때문에 다시 for문으로 간다.
    }
    console.log(a);
}

/*처음 a값은 0 , 0을2로 나누면 0이 나와서 나머지 값이 0이기 때문에 continue 문을
만나지 못하고 출력이 나온다. a++로 a가 1로 증가되었을 땐 a를 2로 나누면 1이 남기때문에 
continue문을 만나게 된다 그러면 콘솔로 가지않고 바로 다음작업으로 진행 하게 된다. */


